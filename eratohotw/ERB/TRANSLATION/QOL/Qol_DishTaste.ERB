@Qol_DishTaste
PRINTL
DRAWLINE
DO
	PRINTL Input the dish taste:
	INPUTS
	CALL Qol_DishTaste_Search(RESULTS)
	SIF RESULT
		RETURN
LOOP 1

;search through every dish through translated taste_dish, add any matches to the list, show every matching entry with translated dish/its taste/comment, about 10 per page
@Qol_DishTaste_Search(ARGS)
#DIMS DYNAMIC TASTE_LIST, 100
#DIM  DYNAMIC TASTE_CNT,  100
#DIM  DYNAMIC TASTE_NUM
#DIM DYNAMIC nPage = 1
#DIM DYNAMIC nPageLength
#DIM nPageSize
#DIM DYNAMIC nPrintCount
#DIM DYNAMIC nCurLoop

#DIMS DYNAMIC strPrintRange

PRINTFORML Searching: "%ARGS%"
LOCAL:1 = 0
strPrintRange =
;create a list
FOR LOCAL, 1, 400 + CHARANUM + 1
	CALL DISHDATA(LOCAL + 100)
	;add taste from ingredients
	FOR LOCAL:2, 0, VARSIZE("DISH_ING")
		SIF DISH_ING:(LOCAL:2) > 0
			CALL DISH_TASTE_ADD(DISH_ING:(LOCAL:2))
	NEXT
	;separate into a searchable array
	CALLF CNT_SPLIT(DISH_TASTE, TASTE_LIST, TASTE_CNT, TASTE_NUM)
	FOR LOCAL:2, 0, TASTE_NUM
		IF STRCOUNT( TOLOWER(TASTE_TR(TASTE_LIST:(LOCAL:2))), TOLOWER(ARGS) )
			strPrintRange += TOSTR(LOCAL) + ":"
			LOCAL:1 ++
			BREAK
		ENDIF
	NEXT
	CALL RESET_DISH
NEXT

nPageSize = 10

gLineCount = LINECOUNT
REDRAW 0
;print list
DO
	;add await
	SIF LINECOUNT - gLineCount > 0
		CLEARLINE LINECOUNT - gLineCount

	;total amount of items
	nPageLength = LOCAL:1 / nPageSize + ((LOCAL:1 % nPageSize) == 0 ? 0 # 1)
	
	;reset current page in case it gets overflowed
	SIF nPage > nPageLength
		nPage = 1


	IF LOCAL:1 == 0
		DRAWLINE
		PRINTFORML
		PRINTFORML No Items Found!!!
		PRINTFORML
		DRAWLINE
		nPageLength = 0
		nPage = 0
	ELSE
		PRINTFORML {LOCAL:1} results found! Note that this only shows base dish taste without modifiers.
		DRAWLINE
		
		nPrintCount = 0
		FOR LOCAL:0, 1, 400 + CHARANUM + 1
			SIF !SPLIT_CHECK(strPrintRange, LOCAL:0) ;show only those who are in the list
				CONTINUE
			
			IF (nPrintCount >= (nPage-1) * nPageSize) && (nPrintCount < (nPage) * nPageSize)
				CALL DISHDATA(LOCAL + 100)
				LOCALS = 【%DISHNAME_TR(DISH_NAME)%】%DISHCOMMENT_TR(LOCAL + 100)%
				PRINTFORML %BREAKENG(LOCALS, 0, "\n" + BL(STRLENS(@"【%DISHNAME_TR(DISH_NAME)%】")))%
				PRINT 　
				FOR LOCAL:2, 0, VARSIZE("DISH_ING")
					SIF DISH_ING:(LOCAL:2) > 0
						CALL DISH_TASTE_ADD(DISH_ING:(LOCAL:2))
				NEXT
				PRINTBUTTON @"[No: {LOCAL,3}]", ""
				IF INRANGE(LOCAL + 100, 101, 200)
					PRINTBUTTON "[Snack]", ""
				ELSEIF INRANGE(LOCAL + 100, 201, 300)
					PRINTBUTTON "[Meal]", ""
				ELSEIF INRANGE(LOCAL + 100, 301, 400)
					PRINTBUTTON "[Dessert]", ""
				ENDIF
				CALL SHOW_TASTE(DISH_TASTE, "DISH_DATA",,1)
				CALL RESET_DISH
				PRINTL
			ENDIF
			nPrintCount ++
		NEXT
		PRINTFORML
	ENDIF
	CALL EQUATE_LINE, (gLineCount + 10 + nPageSize*3)
	;controls
	DRAWLINE
	IF nPageLength == 1
		SETCOLOR 0x606060
		PRINTFORM %"Prev page",15,LEFT%
		RESETCOLOR 
	ELSE
		PRINTBUTTON @"%"Prev page",15,LEFT%", 888
	ENDIF
	PRINTFORM ({nPage}/{nPageLength})%BL(6)%
	PRINTFORM 
	IF nPageLength == 1
		SETCOLOR 0x606060
		PRINTFORM %"Next page",15,LEFT%
		RESETCOLOR 
	ELSE
		PRINTBUTTON @"%"Next page",15,LEFT%", 777
	ENDIF
	PRINTFORML 
	PRINTFORML 
	PRINTBUTTON "[998] Search More　", 998
	PRINTFORML 
	PRINTBUTTON "[999] Return　", 999
	PRINTFORM  
		
	INPUT
	SELECTCASE RESULT
	CASE 998
		RETURN
	CASE 999
		CALL RESET_DISH
		RETURN 1
	CASE 777, 888
		SIF nPageLength == 1
			CONTINUE
		nPage = PAGE_HANDLE(RESULT, 888, nPage, 1, nPageLength)
	ENDSELECT
LOOP 1
